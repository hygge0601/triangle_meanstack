import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ContentChild, ElementRef, Renderer } from '@angular/core';
import { uniqueId } from '../../util/util';
import { NglFormInput } from './input';
import { NglFormLabelTemplate, getFormLabel } from '../form-label';
export var NglFormElement = (function () {
    function NglFormElement(detector, element, renderer) {
        this.detector = detector;
        this.element = element;
        this.renderer = renderer;
        this.uid = uniqueId('form_element');
        this.required = false;
    }
    NglFormElement.prototype.ngOnInit = function () {
        this.renderer.setElementClass(this.element.nativeElement, 'slds-form-element', true);
    };
    NglFormElement.prototype.ngOnChanges = function (changes) {
        this.setFormLabel();
        this.setInputErrorId();
        this.renderer.setElementClass(this.element.nativeElement, 'slds-has-error', !!this.error);
    };
    NglFormElement.prototype.ngAfterContentInit = function () {
        if (!this.contentEl) {
            throw Error("Couldn't find an input, textarea or select with [nglFormControl] attribute inside <ngl-form-element>");
        }
        this.contentEl.id = this.uid;
        this.setInputErrorId();
        this.setFormLabel();
    };
    NglFormElement.prototype.setInputErrorId = function () {
        if (!this.contentEl)
            return;
        this.contentEl.describedBy = this.error ? "error_" + this.uid : null;
    };
    NglFormElement.prototype.setFormLabel = function () {
        this._label = getFormLabel(this.labelStr, this.labelTpl);
    };
    NglFormElement.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-form-element',
                    template: "\n    <label class=\"slds-form-element__label\" [attr.for]=\"uid\"><abbr class=\"slds-required\" *ngIf=\"required\" title=\"required\">*</abbr><span [nglInternalOutlet]=\"_label\"></span></label><div class=\"slds-form-element__control\"><ng-content></ng-content></div><div class=\"slds-form-element__help\" *ngIf=\"error\" [id]=\"'error_' + uid\">{{error}}</div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host { display: block; }"],
                },] },
    ];
    /** @nocollapse */
    NglFormElement.ctorParameters = [
        { type: ChangeDetectorRef, },
        { type: ElementRef, },
        { type: Renderer, },
    ];
    NglFormElement.propDecorators = {
        'contentEl': [{ type: ContentChild, args: [NglFormInput,] },],
        'labelStr': [{ type: Input, args: ['label',] },],
        'labelTpl': [{ type: ContentChild, args: [NglFormLabelTemplate,] },],
        'error': [{ type: Input },],
    };
    return NglFormElement;
}());
;
//# sourceMappingURL=element.js.map