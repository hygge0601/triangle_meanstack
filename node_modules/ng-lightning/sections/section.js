import { Component, Input, Output, EventEmitter, ElementRef, Renderer, HostBinding, ChangeDetectionStrategy } from '@angular/core';
export var NglSection = (function () {
    function NglSection(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.open = false;
        this.openChange = new EventEmitter();
        renderer.setElementClass(element.nativeElement, 'slds-section', true);
    }
    NglSection.prototype.toggle = function (event) {
        event.preventDefault();
        this.openChange.emit(!this.open);
    };
    NglSection.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-section',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "\n    <h3 class=\"slds-section__title\"><button class=\"slds-button slds-section__title-action\" type=\"button\" (click)=\"toggle($event)\"><svg class=\"slds-section__title-action-icon slds-button__icon slds-button__icon--left\" nglIcon=\"switch\"></svg>{{title}}</button></h3><div class=\"slds-section__content\"><ng-content></ng-content></div>\n  ",
                },] },
    ];
    /** @nocollapse */
    NglSection.ctorParameters = [
        { type: ElementRef, },
        { type: Renderer, },
    ];
    NglSection.propDecorators = {
        'title': [{ type: Input },],
        'open': [{ type: HostBinding, args: ['class.slds-is-open',] }, { type: Input },],
        'openChange': [{ type: Output },],
    };
    return NglSection;
}());
//# sourceMappingURL=section.js.map